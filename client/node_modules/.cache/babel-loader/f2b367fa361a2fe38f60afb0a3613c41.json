{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// const initialState = {\n//   students: [],\n//   loading: false,\n// };\n// export const getStudents = createAsyncThunk(\n//   \"students/getStudents\",\n//   async (thunkAPI) => {\n//     try {\n//       return fetch(`http://localhost:3001/api/v1/students`).then((res) =>\n//         res.json()\n//       );\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue({ error: error.message });\n//     }\n//   }\n// );\n// export const addStudent = createAsyncThunk(\n//   \"students/addStudent\",\n//   async (thunkAPI) => {\n//     try {\n//       return await fetch(`http://localhost:3000/api/v1/students`, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Accept: \"application/json\",\n//         },\n//         body: JSON.stringify(student),\n//       }).then((res) => {\n//         res.json().then((student) => thunkAPI.dispatch(addStudent(student)));\n//       });\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue({ error: error.message });\n//     }\n//   }\n// );\n// export const studentSlice = createSlice({\n//   name: \"students\",\n//   initialState: {\n//     students: [],\n//   },\n//   reducers: {\n//     setStudents: (state, action) => {\n//       return { ...state, students: [...action.payload] };\n//     },\n//   },\n// });\n// export const { setStudents } = studentSlice.actions;\n// export default studentSlice.reducer;","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/students/studentSlice.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   students: [],\n//   loading: false,\n// };\n\n// export const getStudents = createAsyncThunk(\n//   \"students/getStudents\",\n//   async (thunkAPI) => {\n//     try {\n//       return fetch(`http://localhost:3001/api/v1/students`).then((res) =>\n//         res.json()\n//       );\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue({ error: error.message });\n//     }\n//   }\n// );\n\n// export const addStudent = createAsyncThunk(\n//   \"students/addStudent\",\n//   async (thunkAPI) => {\n//     try {\n//       return await fetch(`http://localhost:3000/api/v1/students`, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Accept: \"application/json\",\n//         },\n//         body: JSON.stringify(student),\n//       }).then((res) => {\n//         res.json().then((student) => thunkAPI.dispatch(addStudent(student)));\n//       });\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue({ error: error.message });\n//     }\n//   }\n// );\n\n// export const studentSlice = createSlice({\n//   name: \"students\",\n//   initialState: {\n//     students: [],\n//   },\n//   reducers: {\n//     setStudents: (state, action) => {\n//       return { ...state, students: [...action.payload] };\n//     },\n//   },\n// });\n\n// export const { setStudents } = studentSlice.actions;\n\n// export default studentSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}