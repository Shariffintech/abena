{"ast":null,"code":"var _jsxFileName = \"/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport \"bulma/css/bulma.min.css\";\nimport { progressCircle } from \"../utilityComponents/progressCircle\";\nimport { Form, Button, Progress, Field } from \"react-bulma-components\";\nimport { addStrategy } from \"./strategySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function StrategyForm() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(addStrategy());\n  }, [dispatch]); // move strategy to \"in review\" status for each submitted strategy once the strategy is submitted\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  };\n\n  const handleNewInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewInput({ ...newInput,\n      [name]: value\n    });\n  }; // add in a way to sort by status\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Strategy Name\",\n      ...register({\n        required: true,\n        maxLength: 80\n      }),\n      id: \"strategy-name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      ...register({\n        validate: value => value.length > 0 || \"Please enter a description\"\n      }),\n      id: \"strategy-description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Reference\",\n      ...register({\n        validate: value => value.length > 0 || \"Please enter a valid reference\"\n      }),\n      id: \"strategy-reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number \",\n      placeholder: \"Category\",\n      ...register({\n        validate: value => value > 0 || \"Please enter a valid category\"\n      }),\n      id: \"strategy-category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Tier\",\n      ...register({\n        validate: value => value > 0 || \"Please enter a tier\"\n      }),\n      id: \"strategy-tier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StrategyForm, \"yPRHKYNvoT84niEzjMZBqUKplr0=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = StrategyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StrategyForm\");","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategyForm.js"],"names":["React","useEffect","useForm","useDispatch","progressCircle","Form","Button","Progress","Field","addStrategy","StrategyForm","register","handleSubmit","formState","errors","dispatch","onSubmit","data","alert","JSON","stringify","handleNewInputChange","e","name","value","target","setNewInput","newInput","required","maxLength","validate","length"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { useForm} from \"react-hook-form\";\nimport { useDispatch} from \"react-redux\";\nimport \"bulma/css/bulma.min.css\";\nimport { progressCircle } from \"../utilityComponents/progressCircle\";\nimport { Form, Button, Progress, Field } from \"react-bulma-components\";\n\nimport { addStrategy } from \"./strategySlice\";\n\nexport function StrategyForm() {\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(addStrategy());\n  }\n  , [dispatch]);\n    \n\n  // move strategy to \"in review\" status for each submitted strategy once the strategy is submitted\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  const handleNewInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewInput({ ...newInput, [name]: value });\n  };\n\n  // add in a way to sort by status\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n\n        type=\"text\"\n        placeholder=\"Strategy Name\"\n        {...register({ required: true, maxLength: 80 })}\n        id=\"strategy-name\"\n      />\n\n      <input\n       \n        type=\"text\"\n        placeholder=\"Description\"\n        {...register({\n          validate: (value) => value.length > 0 || \"Please enter a description\",\n        })}\n        id=\"strategy-description\"\n      />\n\n      <input\n        \n        type=\"text\"\n        placeholder=\"Reference\"\n        {...register({\n          validate: (value) =>\n            value.length > 0 || \"Please enter a valid reference\",\n        })}\n        id=\"strategy-reference\"\n      />\n\n      <input\n    \n        type=\"number \"\n        placeholder=\"Category\"\n        {...register({\n          validate: (value) => value > 0 || \"Please enter a valid category\",\n        })}\n        id=\"strategy-category\"\n      />\n\n      <input\n  \n        type=\"number\"\n        placeholder=\"Tier\"\n        {...register({\n          validate: (value) => value > 0 || \"Please enter a tier\",\n        })}\n        id=\"strategy-tier\"\n      />\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}