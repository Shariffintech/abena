{"ast":null,"code":"import { createSlice } from 'redux-toolkit';\nexport const strategySlice = createSlice({\n  name: 'strategies',\n  initialState: {\n    strategies: []\n  },\n  reducers: {\n    setStrategyPerCategory: (state, action) => {\n      return { ...state,\n        strategyPerCategory: [...action.payload]\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchStrategyByStatus.fulfilled, (state, action) => {\n      state.strategies.push(action.payload);\n    });\n  }\n});\nexport const {\n  setStrategyPerCategory\n} = strategySlice.actions;\nexport default strategySlice.reducer;","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategySlice.js"],"names":["createSlice","strategySlice","name","initialState","strategies","reducers","setStrategyPerCategory","state","action","strategyPerCategory","payload","extraReducers","builder","addCase","fetchStrategyByStatus","fulfilled","push","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,eAA1B;AAIA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;AACrCE,EAAAA,IAAI,EAAE,YAD+B;AAErCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,UAAU,EAAE;AADH,GAFwB;AAKrCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,sBAAsB,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,aAAO,EAAC,GAAGD,KAAJ;AAAWE,QAAAA,mBAAmB,EAAE,CAAC,GAAGD,MAAM,CAACE,OAAX;AAAhC,OAAP;AACH;AAHI,GAL4B;AAUrCC,EAAAA,aAAa,EAAGC,OAAD,IAAY;AACvBA,IAAAA,OAAO,CAACC,OAAR,CAAgBC,qBAAqB,CAACC,SAAtC,EAAiD,CAACR,KAAD,EAAOC,MAAP,KAAiB;AAC9DD,MAAAA,KAAK,CAACH,UAAN,CAAiBY,IAAjB,CAAsBR,MAAM,CAACE,OAA7B;AACH,KAFD;AAGH;AAdoC,CAAD,CAAjC;AAiBP,OAAO,MAAM;AAACJ,EAAAA;AAAD,IAA2BL,aAAa,CAACgB,OAA/C;AAEP,eAAehB,aAAa,CAACiB,OAA7B","sourcesContent":["import {createSlice} from 'redux-toolkit';\n\n\n\nexport const strategySlice = createSlice({\n    name: 'strategies',\n    initialState:{\n        strategies: [],\n    },\n    reducers:{\n        setStrategyPerCategory:(state, action) => {\n            return {...state, strategyPerCategory: [...action.payload]};\n        }\n    },\n    extraReducers: (builder) =>{\n        builder.addCase(fetchStrategyByStatus.fulfilled, (state,action) =>{\n            state.strategies.push(action.payload)\n        })\n    }\n});\n\nexport const {setStrategyPerCategory} = strategySlice.actions;\n\nexport default strategySlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}