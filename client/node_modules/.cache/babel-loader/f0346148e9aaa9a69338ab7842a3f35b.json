{"ast":null,"code":"// import { createSlice } from \"redux-toolkit\";\n// export const strategySlice = createSlice({\n//   name: \"strategies\",\n//   initialState: {\n//     strategies: [],\n//   },\n//   reducers: {\n//     setStrategyPerCategory: (state, action) => {\n//       return { ...state, strategyPerCategory: [...action.payload] };\n//     },\n//     setStrategyPerStatus: (state, action) => {\n//       return { ...state, strategyPerStatus: [...action.payload] };\n//     },\n//     setStrategyPerTier: (state, action) => {\n//       return { ...state, strategyPerTier: [...action.payload] };\n//     },\n//     setStrategyPerReference: (state, action) => {\n//       return { ...state, strategyPerReference: [...action.payload] };\n//     },\n//     setStrategyPerStudent: (state, action) => {\n//       return { ...state, strategyPerStudent: [...action.payload] };\n//     },\n//   },\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchStrategyByStatus.fulfilled, (state, action) => {\n//       state.strategies.push(action.payload);\n//     });\n//   },\n// });\n// export const { setStrategyPerCategory } = strategySlice.actions;\n// export default strategySlice.reducer;","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategySlice.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { createSlice } from \"redux-toolkit\";\n\n// export const strategySlice = createSlice({\n//   name: \"strategies\",\n//   initialState: {\n//     strategies: [],\n//   },\n//   reducers: {\n//     setStrategyPerCategory: (state, action) => {\n//       return { ...state, strategyPerCategory: [...action.payload] };\n//     },\n//     setStrategyPerStatus: (state, action) => {\n//       return { ...state, strategyPerStatus: [...action.payload] };\n//     },\n//     setStrategyPerTier: (state, action) => {\n//       return { ...state, strategyPerTier: [...action.payload] };\n//     },\n//     setStrategyPerReference: (state, action) => {\n//       return { ...state, strategyPerReference: [...action.payload] };\n//     },\n//     setStrategyPerStudent: (state, action) => {\n//       return { ...state, strategyPerStudent: [...action.payload] };\n//     },\n//   },\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchStrategyByStatus.fulfilled, (state, action) => {\n//       state.strategies.push(action.payload);\n//     });\n//   },\n// });\n\n// export const { setStrategyPerCategory } = strategySlice.actions;\n\n// export default strategySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}