{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  students: [],\n  loading: false\n};\nexport const getStudents = createAsyncThunk(\"students/getStudents\", async thunkAPI => {\n  try {\n    return fetch(`http://localhost:3001/api/v1/students`).then(res => res.json());\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nexport const addStudent = createAsyncThunk(\"students/addStudent\", async thunkAPI => {\n  try {\n    return await fetch(`http://localhost:3000/api/v1/students`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(student)\n    }).then(res => {\n      res.json().then(student => thunkAPI.dispatch(addStudent(student)));\n    });\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nexport const studentSlice = createSlice({\n  name: \"students\",\n  initialState: {\n    students: []\n  },\n  reducers: {\n    setStudents: (state, action) => {\n      return { ...state,\n        students: [...action.payload]\n      };\n    }\n  }\n});\nexport const {\n  setStudents\n} = studentSlice.actions;\nexport default studentSlice.reducer;","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/students/studentSlice.js"],"names":["createSlice","createAsyncThunk","initialState","students","loading","getStudents","thunkAPI","fetch","then","res","json","error","rejectWithValue","message","addStudent","method","headers","Accept","body","JSON","stringify","student","dispatch","studentSlice","name","reducers","setStudents","state","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CACzC,sBADyC,EAEzC,MAAOK,QAAP,IAAoB;AAClB,MAAI;AACF,WAAOC,KAAK,CAAE,uCAAF,CAAL,CAA+CC,IAA/C,CAAqDC,GAAD,IACzDA,GAAG,CAACC,IAAJ,EADK,CAAP;AAGD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,WAAOL,QAAQ,CAACM,eAAT,CAAyB;AAAED,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,KAAzB,CAAP;AACD;AACF,CAVwC,CAApC;AAaP,OAAO,MAAMC,UAAU,GAAGb,gBAAgB,CACxC,qBADwC,EAExC,MAAOK,QAAP,IAAoB;AAClB,MAAI;AACF,WAAO,MAAMC,KAAK,CAAE,uCAAF,EAA0C;AAC1DQ,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFiD;AAM1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,OAAf;AANoD,KAA1C,CAAL,CAOVb,IAPU,CAOJC,GAAD,IAAS;AACfA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBa,OAAD,IAAaf,QAAQ,CAACgB,QAAT,CAAkBR,UAAU,CAACO,OAAD,CAA5B,CAA7B;AACD,KATY,CAAb;AAUD,GAXD,CAWE,OAAOV,KAAP,EAAc;AACd,WAAOL,QAAQ,CAACM,eAAT,CAAyB;AAAED,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,KAAzB,CAAP;AACD;AACF,CAjBuC,CAAnC;AAoBP,OAAO,MAAMU,YAAY,GAAGvB,WAAW,CAAC;AACtCwB,EAAAA,IAAI,EAAE,UADgC;AAEtCtB,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AADE,GAFwB;AAKtCsB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,aAAO,EAAE,GAAGD,KAAL;AAAYxB,QAAAA,QAAQ,EAAE,CAAC,GAAGyB,MAAM,CAACC,OAAX;AAAtB,OAAP;AACD;AAHO;AAL4B,CAAD,CAAhC;AAYP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAkBH,YAAY,CAACO,OAArC;AAEP,eAAeP,YAAY,CAACQ,OAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  students: [],\n  loading: false,\n};\n\nexport const getStudents = createAsyncThunk(\n  \"students/getStudents\",\n  async (thunkAPI) => {\n    try {\n      return fetch(`http://localhost:3001/api/v1/students`).then((res) =>\n        res.json()\n      );\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message });\n    }\n  }\n);\n\nexport const addStudent = createAsyncThunk(\n  \"students/addStudent\",\n  async (thunkAPI) => {\n    try {\n      return await fetch(`http://localhost:3000/api/v1/students`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(student),\n      }).then((res) => {\n        res.json().then((student) => thunkAPI.dispatch(addStudent(student)));\n      });\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message });\n    }\n  }\n);\n\nexport const studentSlice = createSlice({\n  name: \"students\",\n  initialState: {\n    students: [],\n  },\n  reducers: {\n    setStudents: (state, action) => {\n      return { ...state, students: [...action.payload] };\n    },\n  },\n});\n\nexport const { setStudents } = studentSlice.actions;\n\nexport default studentSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}