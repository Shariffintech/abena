{"ast":null,"code":"import { useRoutePreloader, useRouter } from \"../../router/index.js\";\nimport { motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport { fontStore, LoadFontResult } from \"../fonts/fontStore.js\";\nimport { Animatable } from \"../../animation/Animatable/Animatable.js\";\nimport { cx } from \"../../modules/cx.js\";\nimport { parseFramerPageLink, PathVariablesContext, replaceFramerPageLinks, useLinkMatchesRoute } from \"../../modules/framerPageLink.js\";\nimport { useIsOnFramerCanvas } from \"../../modules/useIsOnFramerCanvas.js\";\nimport { collectTextShadowsForProps } from \"../style/shadow.js\";\nimport { calculateRect, ParentSizeState, useParentSize } from \"../types/NewConstraints.js\";\nimport { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { collectFiltersFromProps } from \"../utils/filtersForNode.js\";\nimport { injectComponentCSSRules } from \"../utils/injectComponentCSSRules.js\";\nimport { forceLayerBackingWithCSSProperties } from \"../utils/setLayerBacked.js\";\nimport { transformTemplate } from \"../utils/transformTemplate.js\";\nimport { useLayoutId } from \"../utils/useLayoutId.js\";\nimport { measureClosestComponentContainer, useMeasureLayout } from \"../utils/useMeasureLayout.js\";\nimport { isShallowEqualArray } from \"../utils/isShallowEqualArray.js\";\nimport { ComponentContainerContext } from \"./ComponentContainerContext.js\";\nimport { findAnchorElementWithin } from \"./Text.js\";\n/**\n * @internal\n * Don't change this value as it's used in generated components as well.\n */\n\nexport const richTextPlaceholder = \"{{ text-placeholder }}\";\n/**\n * @internal\n */\n\nexport const RichText = React.forwardRef(function Text(props, forwardedRef) {\n  const {\n    id,\n    name,\n    html = \"\",\n    fonts = [],\n    text,\n    width,\n    height,\n    left,\n    right,\n    top,\n    bottom,\n    center,\n    className,\n    visible = true,\n    opacity,\n    rotation = 0,\n    verticalAlignment = \"top\",\n    isEditable = false,\n    willChangeTransform,\n    environment = RenderTarget.current,\n    withExternalLayout = false,\n    positionSticky,\n    positionStickyTop,\n    positionStickyRight,\n    positionStickyBottom,\n    positionStickyLeft,\n    __htmlStructure,\n    __fromCanvasComponent,\n    _forwardedOverrideId,\n    _forwardedOverrides,\n    _usesDOMRect,\n    ...rest\n  } = props;\n  const parentSize = useParentSize();\n  const layoutId = useLayoutId(props);\n  const fallbackLayoutRef = useRef(null);\n  const layoutRef = forwardedRef ?? fallbackLayoutRef;\n  const {\n    navigate,\n    getRoute,\n    currentRouteId\n  } = useRouter();\n  useRoutePreloader(props.preload ?? []);\n  useMeasureLayout(props, layoutRef);\n  const inCodeComponent = React.useContext(ComponentContainerContext);\n  const matchesCurrentRoute = useLinkMatchesRoute(props.__link);\n  const isOnCanvas = useIsOnFramerCanvas();\n  let innerHTML = html;\n  let textContent = text; // Replace HTML with text override or variable\n\n  const forwardedOverrideId = _forwardedOverrideId ?? id;\n\n  if (forwardedOverrideId && _forwardedOverrides) {\n    const text = _forwardedOverrides[forwardedOverrideId];\n\n    if (typeof text === \"string\") {\n      textContent = text;\n    }\n  } // The placeholder is inserted in collectRichText.ts\n\n\n  if (textContent && __htmlStructure) {\n    innerHTML = __htmlStructure.replace(richTextPlaceholder, textContent);\n  } // Parse the ProseMirror HTML to replace framer page links in the `data:framer/page-link,`\n  // format with the correct paths their target corresponds to.\n  // This needs to happen whenever the HTML string changes, since smart\n  // components can update the ProseMirror HTML in variants by updating this prop value.\n\n\n  const pathVariables = React.useContext(PathVariablesContext);\n  innerHTML = React.useMemo(() => {\n    if (isOnCanvas || !getRoute || !currentRouteId) return innerHTML;\n    return replaceFramerPageLinks(innerHTML, getRoute, currentRouteId, pathVariables);\n  }, [innerHTML, getRoute, isOnCanvas, currentRouteId, pathVariables]);\n  React.useEffect(() => {\n    const container = layoutRef.current;\n    if (container === null) return;\n\n    function interceptPageLinks(event) {\n      const anchorElement = findAnchorElementWithin(event.target, layoutRef); // Don't prevent cmd + click, allowing users to open in new tab.\n\n      if (event.metaKey || !navigate || !anchorElement) return; // Page links written to the ProseMirror HTML in the `data:framer/page-link,`\n      // format should have been parsed, and replaced with the correct paths.\n      // If that has happened, we can access the route id and transition properties\n      // as data attributes, finally performing a navigation.\n\n      const pageLink = anchorElement.getAttribute(\"data-framer-page-link-target\"\n      /* Page */\n      );\n\n      if (pageLink) {\n        event.preventDefault();\n        const elementId = anchorElement.getAttribute(\"data-framer-page-link-element\"\n        /* Element */\n        ) ?? undefined;\n        return navigate(pageLink, elementId, pathVariables);\n      } // If for some reason the page links in the ProseMirror HTML have not been\n      // parsed, try to still perform a navigation by parsing the page\n      // link in the href.\n\n\n      const href = anchorElement.getAttribute(\"href\");\n\n      if (href) {\n        const link = parseFramerPageLink(href);\n        if (!link || !link.target) return;\n        event.preventDefault();\n        return navigate(link.target, link.element ?? undefined, pathVariables);\n      }\n    }\n\n    container.addEventListener(\"click\", interceptPageLinks);\n    return () => {\n      container.removeEventListener(\"click\", interceptPageLinks);\n    };\n  }, [navigate, pathVariables]); // The fonts array is typically regenerated for every change to a text node,\n  // so we need to keep track of previous values to avoid calls to the font\n  // store when the contents of the array are the same between renders\n\n  const prevFontsRef = useRef([]);\n\n  if (!isShallowEqualArray(prevFontsRef.current, fonts)) {\n    prevFontsRef.current = fonts;\n    fontStore.loadWebFontsFromSelectors(fonts).then(results => {\n      // After fonts load, layout is likely to shift in auto-sized\n      // elements. Since measurements would have typically already been\n      // taken at this point, this can lead to selection outlines\n      // appearing out of sync with the rendered component. On the canvas\n      // we hook into the font loading process and manually trigger a\n      // re-render for the node when it completes, which in turn makes\n      // sure that all layout measurements take the latest layout shifts\n      // into account. In compiled smart components, however, we can't use\n      // the same solution. We'll instead check if new fonts have been\n      // loaded, and attempt to add a measure request for the closest\n      // component container, which in the case of component instances is\n      // the only node whose measurements need updating (we don't track\n      // measurements for things rendered inside the component itself,\n      // which could also be affected by layout shifts).\n      // If we're not running on the canvas and from within a smart\n      // component, there's no need to measure.\n      if (!__fromCanvasComponent || !layoutRef.current || RenderTarget.current() !== RenderTarget.canvas) return; // We only need to measure if at least one new font has been loaded.\n      // Otherwise we assume there was no layout shift.\n\n      const didLoadNewFonts = results.some(result => result.status === \"fulfilled\" && result.value === LoadFontResult.Loaded);\n\n      if (didLoadNewFonts) {\n        measureClosestComponentContainer(layoutRef.current);\n      }\n    });\n  } // Hooks need to be above this line\n\n\n  if (!visible) return null;\n  injectComponentCSSRules();\n  const isHidden = isEditable && environment() === RenderTarget.canvas; // Add more styling and support vertical text alignment\n\n  const style = {\n    outline: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: convertVerticalAlignment(verticalAlignment),\n    opacity: isHidden ? 0 : opacity,\n    flexShrink: 0\n  };\n  const restrictedRenderTarget = RenderTarget.hasRestrictions();\n  const frame = calculateRect(props, parentSize || ParentSizeState.Unknown, false);\n  const isAutoSized = _usesDOMRect && (width === \"auto\" || height === \"auto\");\n  const hasTransformTemplate = !!props.transformTemplate || !frame || !restrictedRenderTarget || __fromCanvasComponent || isAutoSized;\n  const template = hasTransformTemplate ? props.transformTemplate ?? transformTemplate(center) : undefined;\n\n  if (!withExternalLayout) {\n    if (frame && restrictedRenderTarget && !isAutoSized) {\n      const rotate = Animatable.getNumber(rotation).toFixed(4);\n      style.transform = `translate(${frame.x}px, ${frame.y}px) rotate(${rotate}deg)`;\n      style.width = frame.width;\n      style.minWidth = frame.width;\n      style.height = frame.height;\n    } else {\n      style.left = left;\n      style.right = right;\n      style.top = top;\n      style.bottom = bottom;\n      style.width = width;\n      style.height = height; // I have no idea why this works as a number but not as a string. This is copied from the Text component.\n\n      style.rotate = rotation;\n    }\n\n    if (positionSticky) {\n      if (!isOnCanvas || inCodeComponent) {\n        style.position = \"sticky\";\n        style.willChange = \"transform\";\n        style.zIndex = 1;\n        style.top = positionStickyTop;\n        style.right = positionStickyRight;\n        style.bottom = positionStickyBottom;\n        style.left = positionStickyLeft;\n      }\n    }\n  }\n\n  collectFiltersFromProps(props, style);\n  collectTextShadowsForProps(props, style);\n\n  if (willChangeTransform) {\n    // We're not using Layer.applyWillChange here, because adding willChange:transform causes clipping issues in export\n    forceLayerBackingWithCSSProperties(style);\n  }\n\n  Object.assign(style, props.style);\n  return React.createElement(motion.div, {\n    id: id,\n    ref: layoutRef,\n    ...rest,\n    style: style,\n    layoutId: layoutId,\n    \"data-framer-name\": name,\n    \"data-framer-component-type\": \"RichText\",\n    \"data-center\": center,\n    className: cx(className, matchesCurrentRoute && \"current\"),\n    transformTemplate: template,\n    dangerouslySetInnerHTML: {\n      __html: innerHTML\n    }\n  });\n});\n\nfunction convertVerticalAlignment(verticalAlignment) {\n  switch (verticalAlignment) {\n    case \"top\":\n      return \"flex-start\";\n\n    case \"center\":\n      return \"center\";\n\n    case \"bottom\":\n      return \"flex-end\";\n  }\n}","map":{"version":3,"mappings":"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","names":["useRoutePreloader","useRouter","motion","React","useRef","fontStore","LoadFontResult","Animatable","cx","parseFramerPageLink","PathVariablesContext","replaceFramerPageLinks","useLinkMatchesRoute","useIsOnFramerCanvas","collectTextShadowsForProps","calculateRect","ParentSizeState","useParentSize","RenderTarget","collectFiltersFromProps","injectComponentCSSRules","forceLayerBackingWithCSSProperties","transformTemplate","useLayoutId","measureClosestComponentContainer","useMeasureLayout","isShallowEqualArray","ComponentContainerContext","findAnchorElementWithin","richTextPlaceholder","RichText","forwardRef","Text","props","forwardedRef","id","name","html","fonts","text","width","height","left","right","top","bottom","center","className","visible","opacity","rotation","verticalAlignment","isEditable","willChangeTransform","environment","current","withExternalLayout","positionSticky","positionStickyTop","positionStickyRight","positionStickyBottom","positionStickyLeft","__htmlStructure","__fromCanvasComponent","_forwardedOverrideId","_forwardedOverrides","_usesDOMRect","rest","parentSize","layoutId","fallbackLayoutRef","layoutRef","navigate","getRoute","currentRouteId","preload","inCodeComponent","useContext","matchesCurrentRoute","__link","isOnCanvas","innerHTML","textContent","forwardedOverrideId","replace","pathVariables","useMemo","useEffect","container","interceptPageLinks","event","anchorElement","target","metaKey","pageLink","getAttribute","preventDefault","elementId","undefined","href","link","element","addEventListener","removeEventListener","prevFontsRef","loadWebFontsFromSelectors","then","results","canvas","didLoadNewFonts","some","result","status","value","Loaded","isHidden","style","outline","display","flexDirection","justifyContent","convertVerticalAlignment","flexShrink","restrictedRenderTarget","hasRestrictions","frame","Unknown","isAutoSized","hasTransformTemplate","template","rotate","getNumber","toFixed","transform","x","y","minWidth","position","willChange","zIndex","Object","assign","div","ref","dangerouslySetInnerHTML","__html"],"sources":["../../../src/render/presentation/RichText.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}