{"ast":null,"code":"import { configureStore, createAsyncThunk } from '@reduxjs/toolkit';\nimport { studentSlice } from '../components/students/studentSlice';\nconst fetchUserById = createAsyncThunk('users/fetchUserById', async (id, thunkAPI) => {\n  const response = await abenaApi.get(`/users/${id}`);\n  return response.data;\n});\nconst fetchStrategyByStatus = createAsyncThunk('strategy/fetchStrategyByStatus', async (status, thunkAPI) => {\n  const response = await abenaApi.get(`/strategies/${id}`);\n  return response.data;\n});\nconst submitReqStrategy = createAsyncThunk('strategy/submitReqStrategy', async (requestStrategy, thunkAPI) => {\n  const response = await abenaApi.post(`/strategies`);\n  return response.data;\n}); // Later, dispatch the thunk as needed in the app\n\nexport const store = configureStore({\n  reducer: {\n    strategySlice: strategySlice,\n    studentSlice: studentSlice\n  }\n});","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/services/store.js"],"names":["configureStore","createAsyncThunk","studentSlice","fetchUserById","id","thunkAPI","response","abenaApi","get","data","fetchStrategyByStatus","status","submitReqStrategy","requestStrategy","post","store","reducer","strategySlice"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,gBAAzB,QAAgD,kBAAhD;AACA,SAASC,YAAT,QAA6B,qCAA7B;AAGA,MAAMC,aAAa,GAAGF,gBAAgB,CAClC,qBADkC,EAElC,OAAOG,EAAP,EAAWC,QAAX,KAAwB;AACpB,QAAMC,QAAQ,GAAG,MAAMC,QAAQ,CAACC,GAAT,CAAc,UAASJ,EAAG,EAA1B,CAAvB;AACA,SAAOE,QAAQ,CAACG,IAAhB;AACH,CALiC,CAAtC;AAUA,MAAMC,qBAAqB,GAAGT,gBAAgB,CAC1C,gCAD0C,EAE1C,OAAOU,MAAP,EAAeN,QAAf,KAA4B;AACxB,QAAMC,QAAQ,GAAG,MAAMC,QAAQ,CAACC,GAAT,CAAc,eAAcJ,EAAG,EAA/B,CAAvB;AACA,SAAOE,QAAQ,CAACG,IAAhB;AACH,CALyC,CAA9C;AAQA,MAAMG,iBAAiB,GAAGX,gBAAgB,CACtC,4BADsC,EAEtC,OAAMY,eAAN,EAAuBR,QAAvB,KAAmC;AAC/B,QAAMC,QAAQ,GAAG,MAAMC,QAAQ,CAACO,IAAT,CAAe,aAAf,CAAvB;AACA,SAAOR,QAAQ,CAACG,IAAhB;AACH,CALqC,CAA1C,C,CAUA;;AAGA,OAAO,MAAMM,KAAK,GAAGf,cAAc,CAAC;AAChCgB,EAAAA,OAAO,EAAC;AACJC,IAAAA,aAAa,EAAEA,aADX;AAEJf,IAAAA,YAAY,EAAEA;AAFV;AADwB,CAAD,CAA5B","sourcesContent":["import { configureStore, createAsyncThunk} from '@reduxjs/toolkit';\nimport { studentSlice } from '../components/students/studentSlice';\n\n\nconst fetchUserById = createAsyncThunk(\n    'users/fetchUserById',\n    async (id, thunkAPI) => {\n        const response = await abenaApi.get(`/users/${id}`);\n        return response.data;\n    }\n\n    \n);\n\nconst fetchStrategyByStatus = createAsyncThunk(\n    'strategy/fetchStrategyByStatus', \n    async (status, thunkAPI) => {\n        const response = await abenaApi.get(`/strategies/${id}`);\n        return response.data;\n    }\n)\n\nconst submitReqStrategy = createAsyncThunk(\n    'strategy/submitReqStrategy',\n    async(requestStrategy, thunkAPI)=> {\n        const response = await abenaApi.post(`/strategies`);\n        return response.data;\n    }\n\n)\n\n\n// Later, dispatch the thunk as needed in the app\n\n\nexport const store = configureStore({\n    reducer:{\n        strategySlice: strategySlice,\n        studentSlice: studentSlice\n        \n    }\n})"]},"metadata":{},"sourceType":"module"}