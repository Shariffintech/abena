{"ast":null,"code":"var _jsxFileName = \"/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport \"bulma/css/bulma.min.css\";\nimport { progressCircle } from \"../utilityComponents/progressCircle\";\nimport { Form, Button } from \"react-bulma-components\";\nimport { addStrategy } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function StrategyForm(_ref) {\n  _s();\n\n  let {} = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    Label,\n    Control,\n    Input,\n    Select,\n    Textarea,\n    Checkbox,\n    Field\n  } = { ...Form\n  };\n  const dispatch = useDispatch(); // to do: move strategy to \"in review\" status for each submitted strategy once the strategy is submitted\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  const [strategy, setstrategy] = useState(\"\");\n\n  const onAddStrategy = strategy => {\n    addStrategy(strategy);\n  };\n\n  const handleOnChange = e => {\n    setstrategy(e.target.value);\n  };\n\n  const updateStrategy = event => {\n    setstrategy(event.target.value);\n  }; // add in a way to sort by status\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"simpleform\",\n    onSubmit: handleSubmit(onSubmit),\n    value: strategy,\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Strategy Name\",\n          onChange: handleOnChange,\n          id: \"strategy-name\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          type: \"text\",\n          placeholder: \"Description\",\n          onChange: handleOnChange,\n          id: \"strategy-description\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Reference\",\n          onChange: handleOnChange,\n          id: \"strategy-reference\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          type: \"number \",\n          placeholder: \"Category\",\n          onChange: handleOnChange,\n          id: \"strategy-category\",\n          ref: register({\n            required: true\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Academic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Social\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Emotional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"Developmental\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Tier \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          type: \"number\",\n          placeholder: \"Tier\",\n          onChange: handleOnChange,\n          id: \"strategy-tier\",\n          ref: register({\n            required: true\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Tier 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Tier 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Tier 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        type: \"submit\",\n        onClick: onAddStrategy,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StrategyForm, \"S+Ue0K4aiPyxJ0ppbhhSf7j3pwM=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = StrategyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StrategyForm\");","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategyForm.js"],"names":["React","useEffect","useState","useForm","useDispatch","progressCircle","Form","Button","addStrategy","StrategyForm","register","handleSubmit","formState","errors","Label","Control","Input","Select","Textarea","Checkbox","Field","dispatch","onSubmit","e","preventDefault","strategy","setstrategy","onAddStrategy","handleOnChange","target","value","updateStrategy","event","required"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,yBAAP;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AACA,OAAO,SAASC,YAAT,OAA0B;AAAA;;AAAA,MAAJ,EAAI;AAC/B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFV,OAAO,EAJX;AAMA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,QAA3C;AAAqDC,IAAAA;AAArD,MAA+D,EACnE,GAAGd;AADgE,GAArE;AAIA,QAAMe,QAAQ,GAAGjB,WAAW,EAA5B,CAX+B,CAa/B;;AAEA,QAAMkB,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMyB,aAAa,GAAIF,QAAD,IAAc;AAClCjB,IAAAA,WAAW,CAACiB,QAAD,CAAX;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAIL,CAAD,IAAO;AAC5BG,IAAAA,WAAW,CAACH,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCN,IAAAA,WAAW,CAACM,KAAK,CAACH,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD,CA7B+B,CAgC/B;;;AACA,sBACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,QAAQ,EAAEnB,YAAY,CAACW,QAAD,CAFxB;AAGE,IAAA,KAAK,EAAEG,QAHT;AAAA,4BAKE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,QAAQ,EAAEG,cAHZ;AAIE,UAAA,EAAE,EAAC,eAJL;AAKA,UAAA,GAAG,EAAElB,QAAQ,CAAC;AAAEuB,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAiBE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,QAAQ,EAAEL,cAHZ;AAIE,UAAA,EAAE,EAAC,sBAJL;AAKE,UAAA,GAAG,EAAElB,QAAQ,CAAC;AAAEuB,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AALf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eA6BE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,UAAA,QAAQ,EAAEL,cAHZ;AAIE,UAAA,EAAE,EAAC,oBAJL;AAKE,UAAA,GAAG,EAAElB,QAAQ,CAAC;AAAEuB,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AALf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eAyCE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,QAAQ,EAAEL,cAHZ;AAIE,UAAA,EAAE,EAAC,mBAJL;AAKE,UAAA,GAAG,EAAIlB,QAAQ,CAAC;AAAEuB,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CALjB;AAAA,kCAOE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAQ,YAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCF,eA0DE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,QAAQ,EAAEL,cAHZ;AAIE,UAAA,EAAE,EAAC,eAJL;AAKE,UAAA,GAAG,EAAElB,QAAQ,CAAC;AAAEuB,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CALf;AAAA,kCAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1DF,eA2FE;AAAA;AAAA;AAAA;AAAA,YA3FF,eA4FE,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,OAAO,EAAEN,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5FF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoGD;;GArIelB,Y;UAKVN,O,EAMaC,W;;;KAXHK,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport \"bulma/css/bulma.min.css\";\nimport { progressCircle } from \"../utilityComponents/progressCircle\";\nimport { Form, Button } from \"react-bulma-components\";\nimport { addStrategy } from \"../../actions/actions\";\nexport function StrategyForm({}) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const { Label, Control, Input, Select, Textarea, Checkbox, Field } = {\n    ...Form,\n  };\n\n  const dispatch = useDispatch();\n\n  // to do: move strategy to \"in review\" status for each submitted strategy once the strategy is submitted\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const [strategy, setstrategy] = useState(\"\");\n\n  const onAddStrategy = (strategy) => {\n    addStrategy(strategy);\n  };\n\n  const handleOnChange = (e) => {\n    setstrategy(e.target.value);\n  };\n\n  const updateStrategy = (event) => {\n    setstrategy(event.target.value);\n  };\n  // add in a way to sort by status\n  return (\n    <form\n      className=\"simpleform\"\n      onSubmit={handleSubmit(onSubmit)}\n      value={strategy}\n    >\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Name</Label>\n        <Control>\n          <Input\n            type=\"text\"\n            placeholder=\"Strategy Name\"\n            onChange={handleOnChange}\n            id=\"strategy-name\"\n          ref={register({ required: true })}\n          />\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Description</Label>\n        <Control>\n          <Textarea\n            type=\"text\"\n            placeholder=\"Description\"\n            onChange={handleOnChange}\n            id=\"strategy-description\"\n            ref={register({ required: true })}\n          />\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Reference</Label>\n        <Control>\n          <Input\n            type=\"text\"\n            placeholder=\"Reference\"\n            onChange={handleOnChange}\n            id=\"strategy-reference\"\n            ref={register({ required: true })}\n          />\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Category</Label>\n        <Control>\n          <Select\n            type=\"number \"\n            placeholder=\"Category\"\n            onChange={handleOnChange}\n            id=\"strategy-category\"\n            ref = {register({ required: true })}\n          >\n            <option value=\"1\">Academic</option>\n            <option value=\"2\">Social</option>\n            <option value=\"3\">Emotional</option>\n            <option value=\"4\">Developmental</option>\n          </Select>\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Tier </Label>\n        <Control>\n          <Select\n            type=\"number\"\n            placeholder=\"Tier\"\n            onChange={handleOnChange}\n            id=\"strategy-tier\"\n            ref={register({ required: true })}\n          >\n            <option>Tier 1</option>\n            <option>Tier 2</option>\n            <option>Tier 3</option>\n          </Select>\n        </Control>\n\n        {/* <Field>\n          <Control\n            type=\"number\"\n            placeholder=\"Tier\"\n            id=\"strategy-tier\"\n            {...register(\"Tier\", {\n              required: \"Required\",\n            })}\n          >\n            <Checkbox>Tier 1 </Checkbox>\n            <br />\n            <Checkbox>Tier 2 </Checkbox>\n            <br />\n            <Checkbox>Tier 3 </Checkbox>\n          </Control>\n        </Field> */}\n      </Form.Field>\n      <br />\n      <Form.Field>\n        <Button color=\"success\" type=\"submit\" onClick={onAddStrategy}>\n          Submit\n        </Button>\n      </Form.Field>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}