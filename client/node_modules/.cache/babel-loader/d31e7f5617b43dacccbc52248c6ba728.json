{"ast":null,"code":"import { SET_STUDENTS, ADD_STUDENT, DELETE_STUDENT, EDIT_STUDENT } from \"./actionTypes\"; // STUDENTS ACTIONS\n\nconst setStudents = students => {\n  return {\n    type: SET_STUDENTS,\n    payload: students\n  };\n};\n\nexport const addStudent = student => {\n  return {\n    type: ADD_STUDENT,\n    payload: student\n  };\n};\n\nconst editStudent = student => {\n  return {\n    type: EDIT_STUDENT,\n    payload: student\n  };\n};\n\nexport const deleteStudent = id => {\n  return {\n    type: DELETE_STUDENT,\n    payload: id\n  };\n};\nexport const getStudents = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/students\").then(r => r.json()).then(data => dispatch(setStudents(data)));\n  };\n};\nexport const createStudent = formData => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/students\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(student => dispatch(addStudent(student)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\nexport const updateStudent = student => {\n  return dispatch => {\n    fetch(`http://localhost:3000/students/${student.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(student)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editStudent(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\nexport const destroyStudent = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/students/${id}`, {\n      method: \"DELETE\"\n    }).then(r => dispatch(deleteStudent(id)));\n  };\n}; // strategy actions\n\nconst setStrategies = strategies => {\n  return {\n    type: SET_STUDENTS,\n    payload: strategies\n  };\n};\n\nexport const getStrategies = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/strategies\").then(r => r.json()).then(data => dispatch(setStrategies(data)));\n  };\n};\n\nconst addStrategy = strategy => {\n  return {\n    type: ADD_STUDENT,\n    payload: strategy\n  };\n};\n\nexport const createStrategy = formData => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/strategies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(strategy => dispatch(addStrategy(strategy)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\n\nconst editStrategy = strategy => {\n  return {\n    type: EDIT_STUDENT,\n    payload: strategy\n  };\n};\n\nexport const updateStrategy = strategy => {\n  return dispatch => {\n    fetch(`http://localhost:3000/strategies/${strategy.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(strategy)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editStrategy(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst setComment = comment => {\n  return {\n    type: SET_STUDENTS,\n    payload: comment\n  };\n};\n\nexport const getComment = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/comments\").then(r => r.json()).then(data => dispatch(setComment(data)));\n  };\n};\n\nconst addComment = comment => {\n  return {\n    type: ADD_STUDENT,\n    payload: comment\n  };\n};\n\nexport const createComment = formData => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(comment => dispatch(addComment(comment)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\nexport const updateComment = comment => {\n  return dispatch => {\n    fetch(`http://localhost:3000/strategies/${comment.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(comment)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editComment(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst editComment = comment => {\n  return {\n    type: EDIT_STUDENT,\n    payload: comment\n  };\n};\n\nconst deleteComment = id => {\n  return {\n    type: DELETE_STUDENT,\n    payload: id\n  };\n};\n\nexport const destroyComment = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/comments/${id}`, {\n      method: \"DELETE\"\n    }).then(r => dispatch(deleteComment(id)));\n  };\n};\n\nconst setNotes = notes => {\n  return {\n    type: SET_STUDENTS,\n    payload: notes\n  };\n};","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/actions/actions.js"],"names":["SET_STUDENTS","ADD_STUDENT","DELETE_STUDENT","EDIT_STUDENT","setStudents","students","type","payload","addStudent","student","editStudent","deleteStudent","id","getStudents","dispatch","fetch","then","r","json","data","createStudent","formData","method","headers","Accept","body","JSON","stringify","ok","err","console","error","updateStudent","p","catch","log","destroyStudent","setStrategies","strategies","getStrategies","addStrategy","strategy","createStrategy","editStrategy","updateStrategy","setComment","comment","getComment","addComment","createComment","updateComment","editComment","deleteComment","destroyComment","setNotes","notes"],"mappings":"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","sourcesContent":["import {\n  SET_STUDENTS,\n  ADD_STUDENT,\n  DELETE_STUDENT,\n  EDIT_STUDENT,\n} from \"./actionTypes\";\n\n// STUDENTS ACTIONS\n\nconst setStudents = (students) => {\n  return {\n    type: SET_STUDENTS,\n    payload: students,\n  };\n};\n\nexport const addStudent = (student) => {\n  return {\n    type: ADD_STUDENT,\n    payload: student,\n  };\n};\n\nconst editStudent = (student) => {\n  return {\n    type: EDIT_STUDENT,\n    payload: student,\n  };\n};\n\nexport const deleteStudent = (id) => {\n  return {\n    type: DELETE_STUDENT,\n    payload: id,\n  };\n};\n\nexport const getStudents = () => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/students\")\n      .then((r) => r.json())\n      .then((data) => dispatch(setStudents(data)));\n  };\n};\n\nexport const createStudent = (formData) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/students\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((student) => dispatch(addStudent(student)));\n      } else {\n        r.json().then((err) => console.error(err));\n      }\n    });\n  };\n};\n\nexport const updateStudent = (student) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/students/${student.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(student),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editStudent(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const destroyStudent = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/students/${id}`, {\n      method: \"DELETE\",\n    }).then((r) => dispatch(deleteStudent(id)));\n  };\n};\n\n// strategy actions\n\nconst setStrategies = (strategies) => {\n  return {\n    type: SET_STUDENTS,\n    payload: strategies,\n  };\n}\n\n\nexport const getStrategies = () => {\n\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/strategies\")\n      .then((r) => r.json())\n      .then((data) => dispatch(setStrategies(data)));\n  };\n\n}\n\nconst addStrategy = (strategy) => {\n  return {\n    type: ADD_STUDENT,\n    payload: strategy,\n  };\n}\n\nexport const createStrategy = (formData) => {\n\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/strategies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((strategy) => dispatch(addStrategy(strategy)));\n      } else {\n        r.json().then((err) => console.error(err));\n      }\n    });\n  }\n\n}\n\nconst editStrategy = (strategy) => {\n  return {\n    type: EDIT_STUDENT,\n    payload: strategy,\n  };\n}\n\nexport const updateStrategy = (strategy) => {\n\n  return (dispatch) => {\n    fetch(`http://localhost:3000/strategies/${strategy.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(strategy),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editStrategy(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n}\n\n\nconst setComment= (comment) => {\n\n  return {\n    type: SET_STUDENTS,\n    payload: comment,\n  };\n\n}\n\nexport const getComment = () => {\n  \n    return (dispatch) => {\n      fetch(\"http://localhost:3000/comments\")\n        .then((r) => r.json())\n        .then((data) => dispatch(setComment(data)));\n    };\n  \n  }\n\n\nconst addComment = (comment) => {\n  return {\n    type: ADD_STUDENT,\n    payload: comment,\n  };\n}\n\n\nexport const createComment = (formData) => {\n    \n    return (dispatch) => {\n      fetch(\"http://localhost:3000/comments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      }).then((r) => {\n        if (r.ok) {\n          r.json().then((comment) => dispatch(addComment(comment)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      });\n    }\n  \n  }\n\nexport const updateComment = (comment) => {\n\n  return (dispatch) => {\n    fetch(`http://localhost:3000/strategies/${comment.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(comment),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editComment(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n}\n\n\nconst editComment = (comment) => {\n  return {\n    type: EDIT_STUDENT,\n    payload: comment,\n  };\n}\n\n\nconst deleteComment = (id) => {\n  return {\n    type: DELETE_STUDENT,\n    payload: id,\n  };\n}\n\n\nexport const destroyComment = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/comments/${id}`, {\n      method: \"DELETE\",\n    }).then((r) => dispatch(deleteComment(id)));\n  };\n}\n\n\nconst setNotes = (notes) => {\n  return {\n    type: SET_STUDENTS,\n    payload: notes,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}