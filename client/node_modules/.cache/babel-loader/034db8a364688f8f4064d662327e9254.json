{"ast":null,"code":"import { SET_STUDENTS, ADD_STUDENT, DELETE_STUDENT, EDIT_STUDENT, SET_STRATEGIES, ADD_STRATEGY, DELETE_STRATEGY, EDIT_STRATEGY, SET_COMMENTS, ADD_COMMENT, DELETE_COMMENT, EDIT_COMMENT, SET_NOTES, ADD_NOTE, DELETE_NOTE, EDIT_NOTE } from \"./actionTypes\"; // STUDENTS ACTIONS\n\nconst setStudents = students => {\n  return {\n    type: SET_STUDENTS,\n    payload: students\n  };\n};\n\nexport const addStudent = student => {\n  return {\n    type: ADD_STUDENT,\n    payload: student\n  };\n};\n\nconst editStudent = student => {\n  return {\n    type: EDIT_STUDENT,\n    payload: student\n  };\n};\n\nexport const deleteStudent = id => {\n  return {\n    type: DELETE_STUDENT,\n    payload: id\n  };\n};\nexport const getStudents = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/students\").then(r => r.json()).then(data => dispatch(setStudents(data)));\n  };\n};\nexport const createStudent = formData => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/students\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(student => dispatch(addStudent(student)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\nexport const updateStudent = student => {\n  return dispatch => {\n    fetch(`http://localhost:3000/students/${student.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(student)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editStudent(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\nexport const destroyStudent = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/students/${id}`, {\n      method: \"DELETE\"\n    }).then(r => dispatch(deleteStudent(id)));\n  };\n}; // strategy actions\n\nconst setStrategies = strategies => {\n  return {\n    type: SET_STRATEGIES,\n    payload: strategies\n  };\n}; // export const getStrategies = () => {\n//   return (dispatch) => {\n//     fetch(\"http://localhost:3000/strategies\")\n//       .then((r) => r.json())\n//       .then((data) => dispatch(setStrategies(data)));\n//   };\n// }\n\n\nconst addStrategy = strategy => {\n  return {\n    type: ADD_STRATEGY,\n    payload: strategy\n  };\n};\n\nexport const createStrategy = formData => {\n  return dispatch => {\n    fetch(`http://localhost:3001/api/v1/strategies`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(strategy => dispatch(addStrategy(strategy)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\n\nconst editStrategy = strategy => {\n  return {\n    type: EDIT_STRATEGY,\n    payload: strategy\n  };\n};\n\nexport const updateStrategy = strategies => {\n  return dispatch => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(strategies)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editStrategy(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst setComments = comments => {\n  return {\n    type: SET_COMMENTS,\n    payload: comments\n  };\n};\n\nexport const getComments = strategies => {\n  return dispatch => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments`).then(r => r.json()).then(data => dispatch(setComments(data)));\n  };\n};\n\nconst addComment = comment => {\n  return {\n    type: ADD_COMMENT,\n    payload: comment\n  };\n};\n\nexport const createComment = (strategies, comment) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments/${comment.id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(strategies)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(comment => dispatch(addComment(comment)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\nexport const updateComment = (strategies, comment) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments/${comment.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(comment)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editComment(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst editComment = comment => {\n  return {\n    type: EDIT_COMMENT,\n    payload: comment\n  };\n};\n\nconst deleteComment = id => {\n  return {\n    type: DELETE_COMMENT,\n    payload: id\n  };\n};\n\nexport const destroyComment = (strategies, comment) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments/${comment.id}`, {\n      method: \"DELETE\"\n    }).then(r => dispatch(deleteComment(id)));\n  };\n};\n\nconst setNotes = notes => {\n  return {\n    type: SET_NOTES,\n    payload: notes\n  };\n};\n\nexport const getNotes = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/notes\").then(r => r.json()).then(data => dispatch(setNotes(data)));\n  };\n};\n\nconst addNote = note => {\n  return {\n    type: ADD_NOTE,\n    payload: note\n  };\n};\n\nexport const createNote = formData => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(note => dispatch(addNote(note)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\n\nconst editNote = note => {\n  return {\n    type: EDIT_NOTE,\n    payload: note\n  };\n};\n\nconst deleteNote = id => {\n  return {\n    type: DELETE_NOTE,\n    payload: id\n  };\n};\n\nexport const destroyNote = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/notes/${id}`, {\n      method: \"DELETE\"\n    }).then(r => dispatch(deleteNote(id)));\n  };\n};\n\nconst setClassroom = classroom => {\n  return {\n    type: SET_CLASSROOMS,\n    payload: classroom\n  };\n};\n\nexport const getClassroom = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/classrooms\").then(r => r.json()).then(data => dispatch(setClassroom(data)));\n  };\n};\n\nconst addClassroom = classroom => {\n  return {\n    type: ADD_CLASSROOM,\n    payload: classroom\n  };\n};\n\nexport const createClassroom = formData => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/classrooms\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(classroom => dispatch(addClassroom(classroom)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    });\n  };\n};\n\nconst editClassroom = classroom => {\n  return {\n    type: EDIT_CLASSROOM,\n    payload: classroom\n  };\n};\n\nexport const updateClassroom = classroom => {\n  return dispatch => {\n    fetch(`http://localhost:3000/classrooms/${classroom.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(classroom)\n    }).then(r => {\n      if (r.ok) {\n        // add student to redux\n        r.json().then(p => dispatch(editClassroom(p)));\n      } else {\n        r.json().then(err => console.error(err));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst deleteClassroom = id => {\n  return {\n    type: DELETE_CLASSROOM,\n    payload: id\n  };\n};\n\nexport const destroyClassroom = id => {\n  return dispatch => {\n    fetch(`http://localhost:3000/classrooms/${id}`, {\n      method: \"DELETE\"\n    }).then(r => dispatch(deleteClassroom(id)));\n  };\n};","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/actions/actions.js"],"names":["SET_STUDENTS","ADD_STUDENT","DELETE_STUDENT","EDIT_STUDENT","SET_STRATEGIES","ADD_STRATEGY","DELETE_STRATEGY","EDIT_STRATEGY","SET_COMMENTS","ADD_COMMENT","DELETE_COMMENT","EDIT_COMMENT","SET_NOTES","ADD_NOTE","DELETE_NOTE","EDIT_NOTE","setStudents","students","type","payload","addStudent","student","editStudent","deleteStudent","id","getStudents","dispatch","fetch","then","r","json","data","createStudent","formData","method","headers","Accept","body","JSON","stringify","ok","err","console","error","updateStudent","p","catch","log","destroyStudent","setStrategies","strategies","addStrategy","strategy","createStrategy","editStrategy","updateStrategy","setComments","comments","getComments","addComment","comment","createComment","updateComment","editComment","deleteComment","destroyComment","setNotes","notes","getNotes","addNote","note","createNote","editNote","deleteNote","destroyNote","setClassroom","classroom","SET_CLASSROOMS","getClassroom","addClassroom","ADD_CLASSROOM","createClassroom","editClassroom","EDIT_CLASSROOM","updateClassroom","deleteClassroom","DELETE_CLASSROOM","destroyClassroom"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,YANF,EAOEC,eAPF,EAQEC,aARF,EASEC,YATF,EAUEC,WAVF,EAWEC,cAXF,EAYEC,YAZF,EAaEC,SAbF,EAcEC,QAdF,EAeEC,WAfF,EAgBEC,SAhBF,QAiBO,eAjBP,C,CAmBA;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAElB,YADD;AAELmB,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMG,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO;AACLH,IAAAA,IAAI,EAAEjB,WADD;AAELkB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;;AAOP,MAAMC,WAAW,GAAID,OAAD,IAAa;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAEf,YADD;AAELgB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAME,aAAa,GAAIC,EAAD,IAAQ;AACnC,SAAO;AACLN,IAAAA,IAAI,EAAEhB,cADD;AAELiB,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACV,WAAW,CAACe,IAAD,CAAZ,CAF1B;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc;AACzC,SAAQP,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCO,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF6B;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AANgC,KAAnC,CAAL,CAOGL,IAPH,CAOSC,CAAD,IAAO;AACb,UAAIA,CAAC,CAACW,EAAN,EAAU;AACRX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAeP,OAAD,IAAaK,QAAQ,CAACN,UAAU,CAACC,OAAD,CAAX,CAAnC;AACD,OAFD,MAEO;AACLQ,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAbD;AAcD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMG,aAAa,GAAIvB,OAAD,IAAa;AACxC,SAAQK,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,kCAAiCN,OAAO,CAACG,EAAG,EAA9C,EAAiD;AACpDU,MAAAA,MAAM,EAAE,OAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF2C;AAMpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,OAAf;AAN8C,KAAjD,CAAL,CAQGO,IARH,CAQSC,CAAD,IAAO;AACX,UAAIA,CAAC,CAACW,EAAN,EAAU;AACR;AACAX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAeiB,CAAD,IAAOnB,QAAQ,CAACJ,WAAW,CAACuB,CAAD,CAAZ,CAA7B;AACD,OAHD,MAGO;AACLhB,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAfH,EAgBGK,KAhBH,CAgBUL,GAAD,IAASC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAhBlB;AAiBD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMO,cAAc,GAAIxB,EAAD,IAAQ;AACpC,SAAQE,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,kCAAiCH,EAAG,EAAtC,EAAyC;AAC5CU,MAAAA,MAAM,EAAE;AADoC,KAAzC,CAAL,CAEGN,IAFH,CAESC,CAAD,IAAOH,QAAQ,CAACH,aAAa,CAACC,EAAD,CAAd,CAFvB;AAGD,GAJD;AAKD,CANM,C,CAQP;;AAEA,MAAMyB,aAAa,GAAIC,UAAD,IAAgB;AACpC,SAAO;AACLhC,IAAAA,IAAI,EAAEd,cADD;AAELe,IAAAA,OAAO,EAAE+B;AAFJ,GAAP;AAID,CALD,C,CAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLlC,IAAAA,IAAI,EAAEb,YADD;AAELc,IAAAA,OAAO,EAAEiC;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,cAAc,GAAIpB,QAAD,IAAc;AAE1C,SAAQP,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,yCAAF,EAA4C;AAC/CO,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AANyC,KAA5C,CAAL,CAOGL,IAPH,CAOSC,CAAD,IAAO;AACb,UAAIA,CAAC,CAACW,EAAN,EAAU;AACRX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAewB,QAAD,IAAc1B,QAAQ,CAACyB,WAAW,CAACC,QAAD,CAAZ,CAApC;AACD,OAFD,MAEO;AACLvB,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAbD;AAcD,GAfD;AAiBD,CAnBM;;AAqBP,MAAMa,YAAY,GAAIF,QAAD,IAAc;AACjC,SAAO;AACLlC,IAAAA,IAAI,EAAEX,aADD;AAELY,IAAAA,OAAO,EAAEiC;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMG,cAAc,GAAIL,UAAD,IAAgB;AAE5C,SAAQxB,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,2CAA0CuB,UAAU,CAAC1B,EAAG,EAA1D,EAA6D;AAChEU,MAAAA,MAAM,EAAE,OADwD;AAEhEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFuD;AAMhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,UAAf;AAN0D,KAA7D,CAAL,CAQGtB,IARH,CAQSC,CAAD,IAAO;AACX,UAAIA,CAAC,CAACW,EAAN,EAAU;AACR;AACAX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAeiB,CAAD,IAAOnB,QAAQ,CAAC4B,YAAY,CAACT,CAAD,CAAb,CAA7B;AACD,OAHD,MAGO;AACLhB,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAfH,EAgBGK,KAhBH,CAgBUL,GAAD,IAASC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAhBlB;AAiBD,GAlBD;AAoBD,CAtBM;;AAyBP,MAAMe,WAAW,GAAGC,QAAD,IAAc;AAC/B,SAAO;AACLvC,IAAAA,IAAI,EAAEV,YADD;AAELW,IAAAA,OAAO,EAAEsC;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,WAAW,GAAIR,UAAD,IAAgB;AAEvC,SAAQxB,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,2CAA0CuB,UAAU,CAAC1B,EAAG,WAA1D,CAAL,CACGI,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAAC8B,WAAW,CAACzB,IAAD,CAAZ,CAF1B;AAGD,GAJD;AAMD,CARI;;AAWP,MAAM4B,UAAU,GAAIC,OAAD,IAAa;AAC9B,SAAO;AACL1C,IAAAA,IAAI,EAAET,WADD;AAELU,IAAAA,OAAO,EAAEyC;AAFJ,GAAP;AAID,CALD;;AAQA,OAAO,MAAMC,aAAa,GAAG,CAACX,UAAD,EAAaU,OAAb,KAAyB;AAElD,SAAQlC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,2CAA0CuB,UAAU,CAAC1B,EAAG,aAAYoC,OAAO,CAACpC,EAAG,EAAjF,EAAoF;AACvFU,MAAAA,MAAM,EAAE,MAD+E;AAEvFC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF8E;AAMvFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,UAAf;AANiF,KAApF,CAAL,CAOGtB,IAPH,CAOSC,CAAD,IAAO;AACb,UAAIA,CAAC,CAACW,EAAN,EAAU;AACRX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAegC,OAAD,IAAalC,QAAQ,CAACiC,UAAU,CAACC,OAAD,CAAX,CAAnC;AACD,OAFD,MAEO;AACL/B,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAbD;AAcD,GAfD;AAiBD,CAnBI;AAqBP,OAAO,MAAMqB,aAAa,GAAG,CAACZ,UAAD,EAAaU,OAAb,KAAyB;AAEpD,SAAQlC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,2CAA0CuB,UAAU,CAAC1B,EAAG,aAAYoC,OAAO,CAACpC,EAAG,EAAjF,EAAoF;AACvFU,MAAAA,MAAM,EAAE,OAD+E;AAEvFC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF8E;AAMvFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeqB,OAAf;AANiF,KAApF,CAAL,CAQGhC,IARH,CAQSC,CAAD,IAAO;AACX,UAAIA,CAAC,CAACW,EAAN,EAAU;AACR;AACAX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAeiB,CAAD,IAAOnB,QAAQ,CAACqC,WAAW,CAAClB,CAAD,CAAZ,CAA7B;AACD,OAHD,MAGO;AACLhB,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAfH,EAgBGK,KAhBH,CAgBUL,GAAD,IAASC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAhBlB;AAiBD,GAlBD;AAoBD,CAtBM;;AAyBP,MAAMsB,WAAW,GAAIH,OAAD,IAAa;AAC/B,SAAO;AACL1C,IAAAA,IAAI,EAAEP,YADD;AAELQ,IAAAA,OAAO,EAAEyC;AAFJ,GAAP;AAID,CALD;;AAQA,MAAMI,aAAa,GAAIxC,EAAD,IAAQ;AAC5B,SAAO;AACLN,IAAAA,IAAI,EAAER,cADD;AAELS,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALD;;AAQA,OAAO,MAAMyC,cAAc,GAAG,CAACf,UAAD,EAAaU,OAAb,KAAyB;AACrD,SAAQlC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,2CAA0CuB,UAAU,CAAC1B,EAAG,aAAYoC,OAAO,CAACpC,EAAG,EAAjF,EAAoF;AACvFU,MAAAA,MAAM,EAAE;AAD+E,KAApF,CAAL,CAEGN,IAFH,CAESC,CAAD,IAAOH,QAAQ,CAACsC,aAAa,CAACxC,EAAD,CAAd,CAFvB;AAGD,GAJD;AAKD,CANM;;AASP,MAAM0C,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLjD,IAAAA,IAAI,EAAEN,SADD;AAELO,IAAAA,OAAO,EAAEgD;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAQ1C,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACwC,QAAQ,CAACnC,IAAD,CAAT,CAF1B;AAGD,GAJD;AAKD,CANM;;AAQP,MAAMsC,OAAO,GAAIC,IAAD,IAAU;AACxB,SAAO;AACLpD,IAAAA,IAAI,EAAEL,QADD;AAELM,IAAAA,OAAO,EAAEmD;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,UAAU,GAAItC,QAAD,IAAc;AACtC,SAAQP,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCO,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF0B;AAMnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AAN6B,KAAhC,CAAL,CAOGL,IAPH,CAOSC,CAAD,IAAO;AACb,UAAIA,CAAC,CAACW,EAAN,EAAU;AACRX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAe0C,IAAD,IAAU5C,QAAQ,CAAC2C,OAAO,CAACC,IAAD,CAAR,CAAhC;AACD,OAFD,MAEO;AACLzC,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAbD;AAcD,GAfD;AAgBD,CAjBM;;AAoBP,MAAM+B,QAAQ,GAAIF,IAAD,IAAU;AACzB,SAAO;AACLpD,IAAAA,IAAI,EAAEH,SADD;AAELI,IAAAA,OAAO,EAAEmD;AAFJ,GAAP;AAID,CALD;;AAQA,MAAMG,UAAU,GAAIjD,EAAD,IAAQ;AACzB,SAAO;AACLN,IAAAA,IAAI,EAAEJ,WADD;AAELK,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALD;;AAQA,OAAO,MAAMkD,WAAW,GAAIlD,EAAD,IAAQ;AACjC,SAAQE,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,+BAA8BH,EAAG,EAAnC,EAAsC;AACzCU,MAAAA,MAAM,EAAE;AADiC,KAAtC,CAAL,CAEGN,IAFH,CAESC,CAAD,IAAOH,QAAQ,CAAC+C,UAAU,CAACjD,EAAD,CAAX,CAFvB;AAGD,GAJD;AAKD,CANM;;AASP,MAAMmD,YAAY,GAAIC,SAAD,IAAe;AAClC,SAAO;AACL1D,IAAAA,IAAI,EAAE2D,cADD;AAEL1D,IAAAA,OAAO,EAAEyD;AAFJ,GAAP;AAID,CALD;;AAQA,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,SAAQpD,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACiD,YAAY,CAAC5C,IAAD,CAAb,CAF1B;AAGD,GAJD;AAKD,CANM;;AAQP,MAAMgD,YAAY,GAAIH,SAAD,IAAe;AAClC,SAAO;AACL1D,IAAAA,IAAI,EAAE8D,aADD;AAEL7D,IAAAA,OAAO,EAAEyD;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMK,eAAe,GAAIhD,QAAD,IAAc;AAC3C,SAAQP,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCO,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF+B;AAMxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AANkC,KAArC,CAAL,CAOGL,IAPH,CAOSC,CAAD,IAAO;AACb,UAAIA,CAAC,CAACW,EAAN,EAAU;AACRX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAegD,SAAD,IAAelD,QAAQ,CAACqD,YAAY,CAACH,SAAD,CAAb,CAArC;AACD,OAFD,MAEO;AACL/C,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAbD;AAcD,GAfD;AAgBD,CAjBM;;AAmBP,MAAMyC,aAAa,GAAIN,SAAD,IAAe;AACnC,SAAO;AACL1D,IAAAA,IAAI,EAAEiE,cADD;AAELhE,IAAAA,OAAO,EAAEyD;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMQ,eAAe,GAAIR,SAAD,IAAe;AAC5C,SAAQlD,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,oCAAmCiD,SAAS,CAACpD,EAAG,EAAlD,EAAqD;AACxDU,MAAAA,MAAM,EAAE,OADgD;AAExDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF+C;AAMxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeqC,SAAf;AANkD,KAArD,CAAL,CAQGhD,IARH,CAQSC,CAAD,IAAO;AACX,UAAIA,CAAC,CAACW,EAAN,EAAU;AACR;AACAX,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAeiB,CAAD,IAAOnB,QAAQ,CAACwD,aAAa,CAACrC,CAAD,CAAd,CAA7B;AACD,OAHD,MAGO;AACLhB,QAAAA,CAAC,CAACC,IAAF,GAASF,IAAT,CAAea,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAvB;AACD;AACF,KAfH,EAgBGK,KAhBH,CAgBUL,GAAD,IAASC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAhBlB;AAiBD,GAlBD;AAmBD,CApBM;;AAsBP,MAAM4C,eAAe,GAAI7D,EAAD,IAAQ;AAC9B,SAAO;AACLN,IAAAA,IAAI,EAAEoE,gBADD;AAELnE,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALD;;AAQA,OAAO,MAAM+D,gBAAgB,GAAI/D,EAAD,IAAQ;AACtC,SAAQE,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAE,oCAAmCH,EAAG,EAAxC,EAA2C;AAC9CU,MAAAA,MAAM,EAAE;AADsC,KAA3C,CAAL,CAEGN,IAFH,CAESC,CAAD,IAAOH,QAAQ,CAAC2D,eAAe,CAAC7D,EAAD,CAAhB,CAFvB;AAGD,GAJD;AAKD,CANM","sourcesContent":["import {\n  SET_STUDENTS,\n  ADD_STUDENT,\n  DELETE_STUDENT,\n  EDIT_STUDENT,\n  SET_STRATEGIES,\n  ADD_STRATEGY,\n  DELETE_STRATEGY,\n  EDIT_STRATEGY,\n  SET_COMMENTS,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  EDIT_COMMENT,\n  SET_NOTES,\n  ADD_NOTE,\n  DELETE_NOTE,\n  EDIT_NOTE,\n} from \"./actionTypes\";\n\n// STUDENTS ACTIONS\n\nconst setStudents = (students) => {\n  return {\n    type: SET_STUDENTS,\n    payload: students,\n  };\n};\n\nexport const addStudent = (student) => {\n  return {\n    type: ADD_STUDENT,\n    payload: student,\n  };\n};\n\nconst editStudent = (student) => {\n  return {\n    type: EDIT_STUDENT,\n    payload: student,\n  };\n};\n\nexport const deleteStudent = (id) => {\n  return {\n    type: DELETE_STUDENT,\n    payload: id,\n  };\n};\n\nexport const getStudents = () => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/students\")\n      .then((r) => r.json())\n      .then((data) => dispatch(setStudents(data)));\n  };\n};\n\nexport const createStudent = (formData) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/students\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((student) => dispatch(addStudent(student)));\n      } else {\n        r.json().then((err) => console.error(err));\n      }\n    });\n  };\n};\n\nexport const updateStudent = (student) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/students/${student.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(student),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editStudent(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n\nexport const destroyStudent = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/students/${id}`, {\n      method: \"DELETE\",\n    }).then((r) => dispatch(deleteStudent(id)));\n  };\n};\n\n// strategy actions\n\nconst setStrategies = (strategies) => {\n  return {\n    type: SET_STRATEGIES,\n    payload: strategies,\n  };\n}\n\n\n// export const getStrategies = () => {\n\n//   return (dispatch) => {\n//     fetch(\"http://localhost:3000/strategies\")\n//       .then((r) => r.json())\n//       .then((data) => dispatch(setStrategies(data)));\n//   };\n\n// }\n\nconst addStrategy = (strategy) => {\n  return {\n    type: ADD_STRATEGY,\n    payload: strategy,\n  };\n}\n\nexport const createStrategy = (formData) => {\n\n  return (dispatch) => {\n    fetch(`http://localhost:3001/api/v1/strategies`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((strategy) => dispatch(addStrategy(strategy)));\n      } else {\n        r.json().then((err) => console.error(err));\n      }\n    });\n  }\n\n}\n\nconst editStrategy = (strategy) => {\n  return {\n    type: EDIT_STRATEGY,\n    payload: strategy,\n  };\n}\n\nexport const updateStrategy = (strategies) => {\n\n  return (dispatch) => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(strategies),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editStrategy(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n}\n\n\nconst setComments= (comments) => {\n  return {\n    type: SET_COMMENTS,\n    payload: comments,\n  };\n}\n\nexport const getComments = (strategies) => {\n  \n    return (dispatch) => {\n      fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments`)\n        .then((r) => r.json())\n        .then((data) => dispatch(setComments(data)));\n    };\n  \n  }\n\n\nconst addComment = (comment) => {\n  return {\n    type: ADD_COMMENT,\n    payload: comment,\n  };\n}\n\n\nexport const createComment = (strategies, comment) => {\n    \n    return (dispatch) => {\n      fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments/${comment.id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(strategies),\n      }).then((r) => {\n        if (r.ok) {\n          r.json().then((comment) => dispatch(addComment(comment)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      });\n    }\n  \n  }\n\nexport const updateComment = (strategies, comment) => {\n\n  return (dispatch) => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments/${comment.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(comment),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editComment(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n}\n\n\nconst editComment = (comment) => {\n  return {\n    type: EDIT_COMMENT,\n    payload: comment,\n  };\n}\n\n\nconst deleteComment = (id) => {\n  return {\n    type: DELETE_COMMENT,\n    payload: id,\n  };\n}\n\n\nexport const destroyComment = (strategies, comment) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3001/api/v1/strategies/${strategies.id}/comments/${comment.id}`, {\n      method: \"DELETE\",\n    }).then((r) => dispatch(deleteComment(id)));\n  };\n}\n\n\nconst setNotes = (notes) => {\n  return {\n    type: SET_NOTES,\n    payload: notes,\n  };\n}\n\nexport const getNotes = () => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/notes\")\n      .then((r) => r.json())\n      .then((data) => dispatch(setNotes(data)));\n  };\n}\n\nconst addNote = (note) => {\n  return {\n    type: ADD_NOTE,\n    payload: note,\n  };\n}\n\nexport const createNote = (formData) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((note) => dispatch(addNote(note)));\n      } else {\n        r.json().then((err) => console.error(err));\n      }\n    });\n  }\n}\n\n\nconst editNote = (note) => {\n  return {\n    type: EDIT_NOTE,\n    payload: note,\n  };\n}\n\n\nconst deleteNote = (id) => {\n  return {\n    type: DELETE_NOTE,\n    payload: id,\n  };\n}\n\n\nexport const destroyNote = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/notes/${id}`, {\n      method: \"DELETE\",\n    }).then((r) => dispatch(deleteNote(id)));\n  };\n}\n\n\nconst setClassroom = (classroom) => {\n  return {\n    type: SET_CLASSROOMS,\n    payload: classroom,\n  };\n}\n\n\nexport const getClassroom = () => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/classrooms\")\n      .then((r) => r.json())\n      .then((data) => dispatch(setClassroom(data)));\n  };\n}\n\nconst addClassroom = (classroom) => {\n  return {\n    type: ADD_CLASSROOM,\n    payload: classroom,\n  };\n}\n\nexport const createClassroom = (formData) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/classrooms\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((classroom) => dispatch(addClassroom(classroom)));\n      } else {\n        r.json().then((err) => console.error(err));\n      }\n    });\n  }\n}\n\nconst editClassroom = (classroom) => {\n  return {\n    type: EDIT_CLASSROOM,\n    payload: classroom,\n  };\n}\n\nexport const updateClassroom = (classroom) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/classrooms/${classroom.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(classroom),\n    })\n      .then((r) => {\n        if (r.ok) {\n          // add student to redux\n          r.json().then((p) => dispatch(editClassroom(p)));\n        } else {\n          r.json().then((err) => console.error(err));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n}\n\nconst deleteClassroom = (id) => {\n  return {\n    type: DELETE_CLASSROOM,\n    payload: id,\n  };\n}\n\n\nexport const destroyClassroom = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/classrooms/${id}`, {\n      method: \"DELETE\",\n    }).then((r) => dispatch(deleteClassroom(id)));\n  };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}