{"ast":null,"code":"var _jsxFileName = \"/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport \"bulma/css/bulma.min.css\";\nimport { progressCircle } from \"../utilityComponents/progressCircle\";\nimport { Form, Button } from \"react-bulma-components\";\nimport { addStrategy } from \"../strategies/strategySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function StrategyForm(_ref) {\n  _s();\n\n  let {} = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    Label,\n    Control,\n    Input,\n    Select,\n    Textarea,\n    Checkbox,\n    Field\n  } = { ...Form\n  };\n  const dispatch = useDispatch(); // to do: move strategy to \"in review\" status for each submitted strategy once the strategy is submitted\n\n  const [name, setName] = useState(\"\");\n  const [tier, setTier] = useState(\"Tier1\");\n  const [description, setDescription] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [category, setCategory] = useState(0);\n  const [addRequestStatus, setAddRequestStatus] = useState(\"idle\"); // const canSave =\n  //   [name, category, tier, description, strategyId].every(Boolean) &&\n  //   addRequestStatus === \"idle\";\n\n  const onSaveStrategyClick = e => {\n    console.log(\"strategyData should show\");\n    e.preventDefault();\n    const strategyData = {\n      name,\n      tier,\n      description,\n      reference,\n      category\n    };\n    dispatch(addStrategy(strategyData));\n  }; // try {\n  //   setAddRequestStatus(\"pending\");\n  //   await dispatch(addStrategy({ name, category, tier, description, strategy: strategyId })).unwrap();\n  //   setName(\"\");\n  //   setCategory(\"\");\n  //   setTier(\"\");\n  //   setDescription(\"\");\n  //   setStrategyId(\"\");\n  // } catch (error) {\n  //   setAddRequestStatus(\"failed\");\n  // } finally {\n  //   setAddRequestStatus(\"idle\");\n  // }\n  // add in a way to sort by status\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Strategy Name\",\n          id: \"strategy-name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          id: \"strategy-description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Reference\",\n          value: reference,\n          onChange: e => setReference(e.target.value),\n          id: \"strategy-reference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          type: \"number \",\n          placeholder: \"Category\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          id: \"strategy-category\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Academic\",\n            children: \"Academic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Social\",\n            children: \"Social\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Emotional\",\n            children: \"Emotional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Developmental\",\n            children: \"Developmental\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        size: \"medium\",\n        children: \" Strategy Tier \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          type: \"number\",\n          placeholder: \"Tier\",\n          value: tier,\n          onChange: e => setTier(e.target.value),\n          id: \"strategy-tier\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Tier1\",\n            children: \"Tier1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Tier2\",\n            children: \"Tier2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Tier3\",\n            children: \"Tier3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onSaveStrategyClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n} // {...register(\"Name\", {\n//   required:{\n//     value: true,\n//     message: \"Please enter a strategy name\"\n//     }\n//   })}\n// register(\"Tier\", {\n//   required: {\n//     value: true,\n//     message: \"Please select a tier\",\n//   },\n// });\n// register(\"Description\", {\n//   required: {\n//     value: true,\n//     message: \"Please enter a description\",\n//   },\n// });\n// register(\"Category\", {\n//   required: {\n//     value: true,\n//     message: \"Please select a category\",\n//   },\n// });\n// register(\"Reference\", {\n//   required: {\n//     value: true,\n//     message: \"Please enter a reference\",\n//   },\n// });\n\n_s(StrategyForm, \"TSnDfY9/fwSP+FvOKETkPUBLiOg=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = StrategyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StrategyForm\");","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/strategyForm.js"],"names":["React","useEffect","useState","useRef","useForm","useDispatch","progressCircle","Form","Button","addStrategy","StrategyForm","register","handleSubmit","formState","errors","Label","Control","Input","Select","Textarea","Checkbox","Field","dispatch","name","setName","tier","setTier","description","setDescription","reference","setReference","category","setCategory","addRequestStatus","setAddRequestStatus","onSaveStrategyClick","e","console","log","preventDefault","strategyData","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport \"bulma/css/bulma.min.css\";\nimport { progressCircle } from \"../utilityComponents/progressCircle\";\nimport { Form, Button } from \"react-bulma-components\";\nimport { addStrategy } from \"../strategies/strategySlice\"\nexport function StrategyForm({}) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const { Label, Control, Input, Select, Textarea, Checkbox, Field } = {\n    ...Form,\n  };\n  const dispatch = useDispatch();\n\n  // to do: move strategy to \"in review\" status for each submitted strategy once the strategy is submitted\n\n  const [name, setName] = useState(\"\");\n  const [tier, setTier] = useState(\"Tier1\");\n  const [description, setDescription] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [category, setCategory] = useState(0);\n  const [addRequestStatus, setAddRequestStatus] = useState(\"idle\");\n\n  // const canSave =\n  //   [name, category, tier, description, strategyId].every(Boolean) &&\n  //   addRequestStatus === \"idle\";\n\n  const onSaveStrategyClick = (e) => {\n    console.log(\"strategyData should show\")\n    e.preventDefault();\n    const strategyData = {\n      name,\n      tier,\n      description,\n      reference,\n      category,\n    };\n    \n    dispatch(addStrategy(strategyData));\n  \n  };\n\n  // try {\n  //   setAddRequestStatus(\"pending\");\n  //   await dispatch(addStrategy({ name, category, tier, description, strategy: strategyId })).unwrap();\n  //   setName(\"\");\n  //   setCategory(\"\");\n  //   setTier(\"\");\n  //   setDescription(\"\");\n  //   setStrategyId(\"\");\n  // } catch (error) {\n  //   setAddRequestStatus(\"failed\");\n  // } finally {\n  //   setAddRequestStatus(\"idle\");\n  // }\n\n  // add in a way to sort by status\n  return (\n    <div>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Name</Label>\n        <Control>\n          <Input\n            type=\"text\"\n            placeholder=\"Strategy Name\"\n            id=\"strategy-name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Description</Label>\n        <Control>\n          <Textarea\n            type=\"text\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            id=\"strategy-description\"\n          />\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Reference</Label>\n        <Control>\n          <Input\n            type=\"text\"\n            placeholder=\"Reference\"\n            value={reference}\n            onChange={(e) => setReference(e.target.value)}\n            id=\"strategy-reference\"\n          />\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Category</Label>\n        <Control>\n          <Select\n            type=\"number \"\n            placeholder=\"Category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n            id=\"strategy-category\"\n          >\n            <option value={\"Academic\"}>Academic</option>\n            <option value={\"Social\"}>Social</option>\n            <option value={\"Emotional\"}>Emotional</option>\n            <option value={\"Developmental\"}>Developmental</option>\n          </Select>\n        </Control>\n      </Form.Field>\n      <Form.Field>\n        <Label size=\"medium\"> Strategy Tier </Label>\n        <Control>\n          <Select\n            type=\"number\"\n            placeholder=\"Tier\"\n            value={tier}\n            onChange={(e) => setTier(e.target.value)}\n            id=\"strategy-tier\"\n          >\n            <option value={\"Tier1\"}>Tier1</option>\n            <option value={\"Tier2\"}>Tier2</option>\n            <option value={\"Tier3\"}>Tier3</option>\n          </Select>\n        </Control>\n\n        {/* <Field>\n          <Control\n            type=\"number\"\n            placeholder=\"Tier\"\n            id=\"strategy-tier\"\n            {...register(\"Tier\", {\n              required: \"Required\",\n            })}\n          >\n            <Checkbox>Tier 1 </Checkbox>\n            <br />\n            <Checkbox>Tier 2 </Checkbox>\n            <br />\n            <Checkbox>Tier 3 </Checkbox>\n          </Control>\n        </Field> */}\n      </Form.Field>\n      <br />\n      <Form.Field>\n        <Button color=\"primary\" onClick={onSaveStrategyClick}>\n          Submit\n        </Button>\n      </Form.Field>\n    </div>\n  );\n}\n\n// {...register(\"Name\", {\n//   required:{\n//     value: true,\n//     message: \"Please enter a strategy name\"\n//     }\n//   })}\n\n// register(\"Tier\", {\n//   required: {\n//     value: true,\n//     message: \"Please select a tier\",\n//   },\n// });\n\n// register(\"Description\", {\n//   required: {\n//     value: true,\n//     message: \"Please enter a description\",\n//   },\n// });\n\n// register(\"Category\", {\n//   required: {\n//     value: true,\n//     message: \"Please select a category\",\n//   },\n// });\n\n// register(\"Reference\", {\n//   required: {\n//     value: true,\n//     message: \"Please enter a reference\",\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}