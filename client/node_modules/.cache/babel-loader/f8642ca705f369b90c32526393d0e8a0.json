{"ast":null,"code":"var _jsxFileName = \"/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/loadStrategies.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"bulma/css/bulma.min.css\";\nimport Strategy from \"./strategy\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Strategies() {\n  _s();\n\n  const {\n    strategies,\n    isLoading\n  } = useSelector(state => state.strategy);\n  const dispatch = useDispatch();\n  dispatch(getStrategies()); // to do show strategies as animated carousels with framer\n  // to do: add counter button for did you learn something new on landing page with animation\n  // to do: when strategy is turned on it is applied to the student\n  // pull strategies from the backend api\n  // const dispatch = useDispatch();\n  //   useEffect(() => {\n  //     dispatch(getStrategies());\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: strategies.map(props => /*#__PURE__*/_jsxDEV(Strategy, {\n      name: props.name,\n      description: props.description,\n      tier: props.tier,\n      category: props.category,\n      reference: props.reference,\n      createdAt: props.createdAt,\n      status: props.status,\n      id: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Strategies, \"VxhUtuNlTtzlII2hQiX6s3PnuqM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Strategies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Strategies\");","map":{"version":3,"sources":["/Users/shariftarver/Desktop/Software.eng/FlatironSchool/code/Mod5/abena-dms/client/src/components/strategies/loadStrategies.js"],"names":["React","Strategy","useSelector","useDispatch","useEffect","useState","Strategies","strategies","isLoading","state","strategy","dispatch","getStrategies","map","props","name","description","tier","category","reference","createdAt","status","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA0BN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA3C;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAQ,EAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR,CALmC,CAMnC;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;;AAIE,sBACE;AAAA,cACGL,UAAU,CAACM,GAAX,CAAgBC,KAAD,iBACd,QAAC,QAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,MAAA,WAAW,EAAED,KAAK,CAACE,WAFrB;AAGE,MAAA,IAAI,EAAEF,KAAK,CAACG,IAHd;AAIE,MAAA,QAAQ,EAAEH,KAAK,CAACI,QAJlB;AAKE,MAAA,SAAS,EAAEJ,KAAK,CAACK,SALnB;AAME,MAAA,SAAS,EAAEL,KAAK,CAACM,SANnB;AAOE,MAAA,MAAM,EAAEN,KAAK,CAACO,MAPhB;AAQE,MAAA,EAAE,EAAEP,KAAK,CAACQ;AARZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlCuBhB,U;UAEUJ,W,EAEfC,W;;;KAJKG,U","sourcesContent":["import React from \"react\";\nimport \"bulma/css/bulma.min.css\";\nimport Strategy from \"./strategy\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\n\nexport default function Strategies() {\n\n  const {strategies, isLoading} = useSelector(state => state.strategy);\n\n  const dispatch = useDispatch();\n  dispatch(getStrategies());\n  // to do show strategies as animated carousels with framer\n  // to do: add counter button for did you learn something new on landing page with animation\n  // to do: when strategy is turned on it is applied to the student\n\n// pull strategies from the backend api\n// const dispatch = useDispatch();\n//   useEffect(() => {\n//     dispatch(getStrategies());\n//   }, []);\n\n\n  \n  return (\n    <section>\n      {strategies.map((props) => (\n        <Strategy\n          name={props.name}\n          description={props.description}\n          tier={props.tier}\n          category={props.category}\n          reference={props.reference}\n          createdAt={props.createdAt}\n          status={props.status}\n          id={props.id}\n        />\n      ))}\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}